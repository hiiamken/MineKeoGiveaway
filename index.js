// Import c√°c modules c·∫ßn thi·∫øt t·ª´ th∆∞ vi·ªán Discord.js
const Discord = require("discord.js");
const { Client, GatewayIntentBits, Partials } = require("discord.js");

// T·∫°o m·ªôt client m·ªõi cho bot
const client = new Client({
  partials: [
    Partials.Message, // cho tin nh·∫Øn
    Partials.Channel, // cho k√™nh vƒÉn b·∫£n
    Partials.GuildMember, // cho th√†nh vi√™n trong server
    Partials.Reaction, // cho ph·∫£n ·ª©ng tin nh·∫Øn
  ],
  intents: [
    GatewayIntentBits.Guilds, // cho nh·ªØng thao t√°c li√™n quan ƒë·∫øn server
    GatewayIntentBits.GuildInvites, // cho qu·∫£n l√Ω l·ªùi m·ªùi v√†o server
    GatewayIntentBits.GuildMessages, // cho tin nh·∫Øn trong server
    GatewayIntentBits.GuildMessageReactions, // cho ph·∫£n ·ª©ng c·ªßa tin nh·∫Øn
    GatewayIntentBits.MessageContent, // b·∫≠t n·∫øu c·∫ßn c√°c thao t√°c li√™n quan ƒë·∫øn n·ªôi dung tin nh·∫Øn
  ],
});

// Import module fs ƒë·ªÉ l√†m vi·ªác v·ªõi file system
const fs = require("fs");
const config = require("./config.json");
client.config = config;

// Kh·ªüi t·∫°o h·ªá th·ªëng qu·∫£n l√Ω c√°c s·ª± ki·ªán Giveaway trong Discord
const { GiveawaysManager } = require("discord-giveaways");
client.giveawaysManager = new GiveawaysManager(client, {
  storage: "./storage/giveaways.json",
  default: {
    botsCanWin: false,
    embedColor: "#2F3136",
    reaction: "üéâ",
    lastChance: {
      enabled: true,
      content: `üõë **C∆° h·ªôi cu·ªëi ƒë·ªÉ tham gia** üõë`,
      threshold: 5000,
      embedColor: '#FF0000'
    }
  }
});
//Coded by TKen

/* Ch·∫°y t·∫•t c·∫£ c√°c s·ª± ki·ªán Discord */
fs.readdir("./events/discord", (_err, files) => {
  files.forEach(file => {
    if (!file.endsWith(".js")) return;
    const event = require(`./events/discord/${file}`);
    let eventName = file.split(".")[0];
    console.log(`[Event]   ‚úÖ  Loaded: ${eventName}`);
    client.on(eventName, event.bind(null, client));
    delete require.cache[require.resolve(`./events/discord/${file}`)];
  });
});

/* Ch·∫°y t·∫•t c·∫£ c√°c s·ª± ki·ªán Giveaway */
fs.readdir("./events/giveaways", (_err, files) => {
  files.forEach((file) => {
    if (!file.endsWith(".js")) return;
    const event = require(`./events/giveaways/${file}`);
    let eventName = file.split(".")[0];
    console.log(`[Event]   üéâ Loaded: ${eventName}`);
    client.giveawaysManager.on(eventName, (...file) => event.execute(...file, client)), delete require.cache[require.resolve(`./events/giveaways/${file}`)];
  })
})

// T·∫°o m·ªôt collection ƒë·ªÉ l∆∞u tr·ªØ c√°c l·ªánh (message commands)
client.commands = new Discord.Collection();
/* T·∫£i t·∫•t c·∫£ c√°c l·ªánh */
fs.readdir("./commands/", (_err, files) => {
  files.forEach(file => {
    if (!file.endsWith(".js")) return;
    let props = require(`./commands/${file}`);
    let commandName = file.split(".")[0];
    client.commands.set(commandName, {
      name: commandName,
      ...props
    });
    console.log(`[Command] ‚úÖ  Loaded: ${commandName}`);
  });
});

// T·∫°o m·ªôt collection ƒë·ªÉ l∆∞u tr·ªØ c√°c slash command
client.interactions = new Discord.Collection();
// T·∫°o m·ªôt m·∫£ng tr·ªëng ƒë·ªÉ ƒëƒÉng k√Ω slash command
client.register_arr = []
/* T·∫£i t·∫•t c·∫£ c√°c slash command */
fs.readdir("./slash/", (_err, files) => {
  files.forEach(file => {
    if (!file.endsWith(".js")) return;
    let props = require(`./slash/${file}`);
    let commandName = file.split(".")[0];
    client.interactions.set(commandName, {
      name: commandName,
      ...props
    });
    client.register_arr.push(props)
  });
});

// ƒêƒÉng nh·∫≠p v√†o Discord b·∫±ng th√¥ng tin token trong file config
client.login(config.token);
