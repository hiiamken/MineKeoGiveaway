const { ApplicationCommandOptionType } = require('discord.js');
const ms = require("ms");

module.exports = {
  name: 'edit',
  description: 'üéâ Ch·ªânh s·ª≠a m·ªôt giveaway',

  options: [
    {
      name: 'giveaway',
      description: 'ID c·ªßa s·ª± ki·ªán giveaway c·∫ßn ch·ªânh s·ª≠a',
      type: ApplicationCommandOptionType.String,
      required: true
    },
    {
      name: 'duration',
      description: 'Th·ªùi l∆∞·ª£ng m·ªõi c·ªßa s·ª± ki·ªán giveaway. V√≠ d·ª•: 1h s·∫Ω k·∫øt th√∫c s·ª± ki·ªán sau m·ªôt gi·ªù!',
      type: ApplicationCommandOptionType.String,
      required: true
    },
    {
      name: 'winners',
      description: 'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng trong s·ª± ki·ªán giveaway',
      type: ApplicationCommandOptionType.Integer,
      required: true
    },
    {
      name: 'prize',
      description: 'Gi·∫£i th∆∞·ªüng cho s·ª± ki·ªán giveaway',
      type: ApplicationCommandOptionType.String,
      required: true
    }
  ],

  run: async (client, interaction) => {

    // N·∫øu th√†nh vi√™n kh√¥ng c√≥ ƒë·ªß quy·ªÅn h·∫°n
    if (!interaction.member.permissions.has('ManageMessages') && !interaction.member.roles.cache.some((r) => r.name === "Giveaways")) {
      return interaction.reply({
        content: ':x: B·∫°n c·∫ßn c√≥ quy·ªÅn qu·∫£n l√Ω tin nh·∫Øn ƒë·ªÉ t·∫°o s·ª± ki·ªán giveaway.',
        ephemeral: true
      });
    }
    const gid = interaction.options.getString('giveaway');
    const time = interaction.options.getString('duration');
    const winnersCount = interaction.options.getInteger('winners');
    const prize = interaction.options.getString('prize');
    let duration;
    if (time.startsWith("-")) {
      duration = -ms(time.substring(1));
    } else {
      duration = ms(time);
    }

    if (isNaN(duration)) {
      return interaction.reply({
        content: ":x: Vui l√≤ng ch·ªçn th·ªùi l∆∞·ª£ng h·ª£p l·ªá!",
        ephemeral: true,
      });
    }
    await interaction.deferReply({
      ephemeral: true
    })
    // Ch·ªânh s·ª≠a s·ª± ki·ªán giveaway
    try {
      await client.giveawaysManager.edit(gid, {
        newWinnerCount: winnersCount,
        newPrize: prize,
        addTime: time
      })
    } catch (e) {
      return interaction.editReply({
        content:
          `Kh√¥ng t√¨m th·∫•y s·ª± ki·ªán giveaway v·ªõi ID: \`${gid}\``,
        ephemeral: true
      });
    }
    interaction.editReply({
      content:
        `S·ª± ki·ªán giveaway ƒë√£ ƒë∆∞·ª£c ch·ªânh s·ª≠a th√†nh c√¥ng!`,
      ephemeral: true
    });
  }

};
