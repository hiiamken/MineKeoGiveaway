const Discord = require('discord.js'),
  { EmbedBuilder } = Discord,
  parsec = require('parsec'),
  messages = require('../utils/message');

module.exports.run = async (client, message) => {
    // N·∫øu th√†nh vi√™n kh√¥ng c√≥ ƒë·ªß quy·ªÅn h·∫°n
    if (
      !message.member.permissions.has("ManageMessages") &&
      !message.member.roles.cache.some(r => r.name === "Giveaways")
    ) {
      return message.reply(
        ":x: B·∫°n c·∫ßn c√≥ quy·ªÅn qu·∫£n l√Ω tin nh·∫Øn ƒë·ªÉ b·∫Øt ƒë·∫ßu c√°c s·ª± ki·ªán giveaway."
      );
    }
    
    const collector = message.channel.createMessageCollector({
      filter: (m) => m.author.id === message.author.id,
      time: 60000,
    });

    let xembed = new EmbedBuilder()
      .setTitle("R·∫•t ti·∫øc! H√¨nh nh∆∞ ƒë√£ h·∫øt th·ªùi gian! üïñ")
      .setColor("#EFB2FB")
      .setDescription('üí• H·∫øt gi·ªù r·ªìi!\nB·∫°n ƒë√£ m·∫•t qu√° nhi·ªÅu th·ªùi gian ƒë·ªÉ quy·∫øt ƒë·ªãnh!\nS·ª≠ d·ª•ng ``create`` ƒë·ªÉ b·∫Øt ƒë·∫ßu m·ªôt s·ª± ki·ªán giveaway m·ªõi!\nH√£y ƒë·ª£i th√™m **30 gi√¢y** ƒë·ªÉ th·ª≠ l·∫°i!')
      .setFooter({
        text: `${client.user.username}`,
        iconURL: client.user.displayAvatarURL()
      })  
      .setTimestamp();

  function waitingEmbed(title, desc) {
    return message.channel.send({
      embeds: [
        new EmbedBuilder()
          .setAuthor({
            name: `${message.author.tag} + ' | Thi·∫øt l·∫≠p Giveaway'`,
            iconURL: message.member.displayAvatarURL()
          })
          .setTitle('Giveaway ' + title)
          .setDescription(desc + ' trong v√≤ng 60 gi√¢y t·ªõi.')
          .setFooter({
            text: "Nh·∫≠p 'hu·ª∑' ƒë·ªÉ tho√°t qu√° tr√¨nh n√†y.",
            iconURL: client.user.displayAvatarURL()
          })
          .setTimestamp()
          .setColor("#EFB2FB"),
      ],
    });
  }

  let winnerCount, channel, duration, prize, cancelled;

  await waitingEmbed('Gi·∫£i th∆∞·ªüng', 'Vui l√≤ng nh·∫≠p gi·∫£i th∆∞·ªüng c·ªßa s·ª± ki·ªán giveaway');

  collector.on('collect', async (m) => {
    if (cancelled) return;

    async function failed(options, ...cancel) {
      if (typeof cancel[0] === 'boolean')
        (cancelled = true) && (await m.reply(options));
      else {
        await m.reply(
          options instanceof EmbedBuilder ? { embeds: [options] } : options
        );
        return await waitingEmbed(...cancel);
      }
    }

    if (m.content === 'h·ªßy'){ 
      collector.stop();
      return await failed('ƒê√£ h·ªßy T·∫°o s·ª± ki·ªán Giveaway.', true);
    }

    switch (true) {
      case !prize: {
        if (m.content.length > 256)
          return await failed(
            'Gi·∫£i th∆∞·ªüng kh√¥ng th·ªÉ d√†i h∆°n 256 k√Ω t·ª±.',
            'Gi·∫£i th∆∞·ªüng',
            'Vui l√≤ng nh·∫≠p gi·∫£i th∆∞·ªüng c·ªßa s·ª± ki·ªán giveaway'
          );
        else {
          prize = m.content;
          await waitingEmbed('K√™nh', 'Vui l√≤ng nh·∫≠p k√™nh c·ªßa s·ª± ki·ªán giveaway');
        }

        break;
      }

      case !channel: {
        if (!(_channel = m.mentions.channels.first() || m.guild.channels.cache.get(m.content)))
          return await failed(
            'Vui l√≤ng nh·∫≠p m·ªôt k√™nh h·ª£p l·ªá / ID k√™nh.',
            'K√™nh',
            'Vui l√≤ng nh·∫≠p k√™nh c·ªßa s·ª± ki·ªán giveaway'
          );
        else if (!_channel.isTextBased())
          return await failed(
            'K√™nh ph·∫£i l√† m·ªôt k√™nh vƒÉn b·∫£n.',
            'K√™nh',
            'Vui l√≤ng nh·∫≠p k√™nh c·ªßa s·ª± ki·ªán giveaway'
          );
        else {
          channel = _channel;
          await waitingEmbed(
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng',
            'Vui l√≤ng nh·∫≠p s·ªë ng∆∞·ªùi chi·∫øn th·∫Øng c·ªßa s·ª± ki·ªán giveaway.'
          );
        }

        break;
      }

      case !winnerCount: {
        if (!(_w = parseInt(m.content)))
          return await failed(
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng ph·∫£i l√† m·ªôt s·ªë nguy√™n.',
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng',
            'Vui l√≤ng nh·∫≠p s·ªë ng∆∞·ªùi chi·∫øn th·∫Øng c·ªßa s·ª± ki·ªán giveaway.'
          );
        if (_w < 1)
          return await failed(
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng ph·∫£i l·ªõn h∆°n 1.',
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng',
            'Vui l√≤ng nh·∫≠p s·ªë ng∆∞·ªùi chi·∫øn th·∫Øng c·ªßa s·ª± ki·ªán giveaway.'
          );
        else if (_w > 15)
          return await failed(
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng ph·∫£i nh·ªè h∆°n 15.',
            'S·ªë ng∆∞·ªùi chi·∫øn th·∫Øng',
            'Vui l√≤ng nh·∫≠p s·ªë ng∆∞·ªùi chi·∫øn th·∫Øng c·ªßa s·ª± ki·ªán giveaway.'
          );
        else {
          winnerCount = _w;
          await waitingEmbed('Th·ªùi l∆∞·ª£ng', 'Vui l√≤ng nh·∫≠p th·ªùi l∆∞·ª£ng c·ªßa s·ª± ki·ªán giveaway');
        }

        break;
      }

      case !duration: {
        if (!(_d = parsec(m.content).duration))
          return await failed(
            'Vui l√≤ng cung c·∫•p m·ªôt th·ªùi l∆∞·ª£ng h·ª£p l·ªá.',
            'Th·ªùi l∆∞·ª£ng',
            'Vui l√≤ng nh·∫≠p th·ªùi l∆∞·ª£ng c·ªßa s·ª± ki·ªán giveaway'
          );
        if (_d > parsec('21d').duration)
          return await failed(
            'Th·ªùi l∆∞·ª£ng ph·∫£i nh·ªè h∆°n 21 ng√†y!',
            'Th·ªùi l∆∞·ª£ng',
            'Vui l√≤ng nh·∫≠p th·ªùi l∆∞·ª£ng c·ªßa s·ª± ki·ªán giveaway'
          );
        else {
          duration = _d;
        }

        return client.giveawaysManager.start(channel, {
          prize,
          duration,
          winnerCount,
          hostedBy: client.config.hostedBy ? message.author : null,
          messages,
        });
      }
    }
  });
  collector.on('end', (collected, reason) => {
    if (reason == 'time') {
       message.reply({ embeds: [xembed]})
    }
  })
};
